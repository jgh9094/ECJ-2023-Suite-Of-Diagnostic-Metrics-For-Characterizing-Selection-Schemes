#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=1:00:00                # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-450                 # number of jobs being created, each with its array id
#SBATCH --mem=1G                      # memory required per node - amount of memory (in gigs)
#SBATCH --job-name tor-m-con            # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab             # research group account being used

##################################
# Setup required dependencies
##################################
module load GCC/10.2.0; module load CUDA/11.1.1; module load Clang/11.0.1;

##################################
# Setup relevant directories
##################################
DATA_DIR=/mnt/gs21/scratch/herna383/ECJ-2023

##################################
# Setup random seed info
##################################
REPILCATE_OFFSET=0
PROBLEM_SEED_OFFSET=1000
SEED_OFFSET=72000
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET + SEED_OFFSET + REPILCATE_OFFSET))

##################################
# Setup selection scheme
##################################

# tournament == 1
SELECTION_SCHEME=1

##################################
# Setup diagnostic
##################################
EXPLOITATION_RATE=0
ORDERED_EXPLOITATION=1
CONTRADICTORY_OBJECTIVES=2
MULTIPATH_EXPLORATION=3

##################################
# Treatments
##################################

# T = 2
PARAMETER_1_MIN=1
PARAMETER_1_MAX=50

# T = 4
PARAMETER_2_MIN=51
PARAMETER_2_MAX=100

# T = 8
PARAMETER_3_MIN=101
PARAMETER_3_MAX=150

# T = 16
PARAMETER_4_MIN=151
PARAMETER_4_MAX=200

# T = 32
PARAMETER_5_MIN=201
PARAMETER_5_MAX=250

# T = 64
PARAMETER_6_MIN=251
PARAMETER_6_MAX=300

# T = 128
PARAMETER_7_MIN=301
PARAMETER_7_MAX=350

# T = 256
PARAMETER_8_MIN=351
PARAMETER_8_MAX=400

# T = 512
PARAMETER_9_MIN=401
PARAMETER_9_MAX=450

####################################################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_1_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_1_MAX} ] ; then
  T=2

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_2_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_2_MAX} ] ; then
  T=4

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_3_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_3_MAX} ] ; then
  T=8

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_4_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_4_MAX} ] ; then
  T=16

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_5_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_5_MAX} ] ; then
  T=32

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_6_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_6_MAX} ] ; then
  T=64

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_7_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_7_MAX} ] ; then
  T=128

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_8_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_8_MAX} ] ; then
  T=256

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${PARAMETER_9_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${PARAMETER_9_MAX} ] ; then
  T=512

else
  echo "${SEED} from ${PROBLEM} failed to launch" >> /mnt/ls15/scratch/users/herna383/ps-coh-failtolaunch.txt
fi

####################################################################

RUN_DIR=${DATA_DIR}/TOURNAMENT/MVC_CONTRADICTORY_OBJECTIVES/${SEED}/

# make a run directory
mkdir -p ${RUN_DIR}

echo "../../../../dia_world -SEED ${SEED} -DIAGNOSTIC ${CONTRADICTORY_OBJECTIVES} -SELECTION ${SELECTION_SCHEME} -OUTPUT_DIR ${RUN_DIR} -TOUR_SIZE ${T} -VALLEY_CROSSING 1 > run.log" > ./cmd-coh.txt

../../../../dia_world -SEED ${SEED} -DIAGNOSTIC ${CONTRADICTORY_OBJECTIVES} -SELECTION ${SELECTION_SCHEME} -OUTPUT_DIR ${RUN_DIR} -TOUR_SIZE ${T} -VALLEY_CROSSING 1